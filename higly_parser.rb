#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

class HiglyParser < Racc::Parser

module_eval(<<'...end higly_racc.y/module_eval...', 'higly_racc.y', 35)
def parse(str)
  scanner = StringScanner.new(str)
  @q = []

  until scanner.eos?
    scanner.scan(/%expression/) ? @q << [:EXP, scanner.matched] :
    scanner.scan(/left/) ? @q << [:LEFT, scanner.matched] :
    scanner.scan(/right/) ? @q << [:RIGHT, scanner.matched] :
    scanner.scan(/@/) ? @q << [:OP, scanner.matched] :
    scanner.scan(/[a-zA-Z_]\w*/) ? @q << [:IDENTIFIER, scanner.matched] :
    scanner.scan(/0/) ? @q << [:NUM, scanner.matched] :
    scanner.scan(/[1-9]\d*/) ? @q << [:NUM, scanner.matched] :
    scanner.scan(/(0|[1-9]\d*)\.\d+/) ? @q << [:NUM, scanner.matched] :
    scanner.scan(/\"\S*\"/) ? @q << [:S_LITERAL, scanner.matched] :
    scanner.scan(/\(/) ? @q << ['(', scanner.matched] :
    scanner.scan(/\)/) ? @q << [')', scanner.matched] :
    scanner.scan(/,/) ? @q << [',', scanner.matched] :
    scanner.scan(/;/) ? @q << [';', scanner.matched] :
    scanner.scan(/:/) ? @q << [':', scanner.matched] :
    nil
  end
  @q << [false, '$']
    
  do_parse
end

def next_token
  @q.shift
end
...end higly_racc.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    17,     7,     8,     7,     8,   -13,    21,    16,     2,     3,
     4,     5,     9,    12,    12,    14,    15,    21,    23,    24,
    25,    26,    21,    21,    29,    21,    32 ]

racc_action_check = [
    15,     4,     4,    17,    17,    28,    28,    15,     0,     1,
     2,     3,     6,     9,    11,    12,    14,    16,    18,    19,
    20,    22,    24,    25,    26,    29,    31 ]

racc_action_pointer = [
     6,     9,     7,    11,    -4,   nil,     8,   nil,   nil,     6,
   nil,     7,     7,   nil,     7,    -3,     3,    -2,     7,     7,
     7,   nil,    17,   nil,     8,     9,    14,   nil,    -8,    11,
   nil,    15,   nil ]

racc_action_default = [
   -14,   -14,   -14,   -14,   -14,    33,   -14,    -2,    -3,   -14,
    -1,    -5,   -14,    -4,   -14,   -14,   -13,   -14,   -14,    -8,
   -14,   -12,   -14,    -6,   -13,   -13,   -14,    -9,   -11,   -13,
   -10,   -14,    -7 ]

racc_goto_table = [
     6,    18,    10,     1,    13,    30,    28,   nil,   nil,    27,
   nil,   nil,   nil,    22,    31 ]

racc_goto_check = [
     2,     5,     3,     1,     3,     6,     7,   nil,   nil,     5,
   nil,   nil,   nil,     2,     5 ]

racc_goto_pointer = [
   nil,     3,    -4,    -7,   nil,   -15,   -23,   -19 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    11,   nil,    19,    20 ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 16, :_reduce_none,
  1, 17, :_reduce_none,
  1, 17, :_reduce_none,
  2, 18, :_reduce_none,
  1, 18, :_reduce_none,
  6, 19, :_reduce_none,
  9, 19, :_reduce_none,
  1, 20, :_reduce_none,
  3, 20, :_reduce_none,
  4, 21, :_reduce_none,
  3, 21, :_reduce_none,
  1, 22, :_reduce_none,
  0, 22, :_reduce_none ]

racc_reduce_n = 14

racc_shift_n = 33

racc_token_table = {
  false => 0,
  :error => 1,
  :EXP => 2,
  "(" => 3,
  ")" => 4,
  :LEFT => 5,
  :RIGHT => 6,
  :NUM => 7,
  ":" => 8,
  :IDENTIFIER => 9,
  "|" => 10,
  ";" => 11,
  "," => 12,
  :S_LITERAL => 13,
  :OP => 14 }

racc_nt_base = 15

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "EXP",
  "\"(\"",
  "\")\"",
  "LEFT",
  "RIGHT",
  "NUM",
  "\":\"",
  "IDENTIFIER",
  "\"|\"",
  "\";\"",
  "\",\"",
  "S_LITERAL",
  "OP",
  "$start",
  "expression",
  "side",
  "expstmts",
  "expstmt",
  "expfig",
  "operators",
  "operator" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class HiglyParser
