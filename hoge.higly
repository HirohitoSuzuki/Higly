<expression>
%assoc = left
%action = tree
%operator = 'expression'

postfixExpression
  : _ '++' | _ '--' | _ '[' 'expression' ']' | _ '(' ')'
  | _ '.' IDENTIFIER
  | _ '->' IDENTIFIER
  ;

unaryExpression(right)
  : '++' _ | '--' _
  | 'sizeof' _
  | '&' _
  | '*' _
  | '+' _
  | '-' _
  | '~' _
  | '!' _
  ;

multiplecativeExpression
  : _ '*' _ | _ '/' _ | _ '%' _
  ;

additiveExpression
  : _ '+' _ | _ '-' _
  ;

shiftExpression
  : _ '<<' _ | _ '>>' _
  ;

relationalExpression
  : _ '<' _ | _ '>' _ | _ '<=' _ | _ '>=' _
  ;

equalityExpression
  : _ '==' _ | _ '=!' _
  ;

bitwiseAnd
  : _ '&' _
  ;

bitwiseXor
  : _ '^' _
  ;

bitwiseOr
  : _ '|' _
  ;

boolAnd
  : _ '&&' _
  ;

boolOr
  : _ '||' _
  ;

conditionExpression(right)
  : _ '?' _ ':' _
  ;

assignExpression(right)
  : unaryExpression '=' _ | unaryExpression '+=' _ | unaryExpression '-=' _
  | unaryExpression '*=' _ | unaryExpression '/=' _ | unaryExpression '%=' _
  | unaryExpression '<<=' _ | unaryExpression '>>=' _ | unaryExpression '&=' _
  | unaryExpression '^=' _ | unaryExpression '|=' _
  ;

commaExpression
  : _ ',' _
  ;