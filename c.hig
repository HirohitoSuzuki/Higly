<expression>
%assoc = left
%operator = 'type_name_TODO', 'argument_expression_list_TODO', 'expression'

postfix_expression
  : _ '[' 'expression' ']'
  | _ '(' ')'
  | _ '(' 'argument_expression_list_TODO' ')'
  | _ '.' IDENTIFIER
  | _ '->' IDENTIFIER
  | _ '++'
  | _ '--'
  | conpound_literal_TODO
  ;

unary_expression(right)
  : '++' _
  | '--' _
  | '&' cast_expression
  | '*' cast_expression
  | '+' cast_expression
  | '-' cast_expression
  | '~' cast_expression
  | '!' cast_expression
  | 'sizeof' _
  | sizeof_typename_TODO
  ;

cast_expression(right)
  : '(' 'type_name_TODO' ')' _
  ;

multiplecative_expression
  : _ '*' _
  | _ '/' _
  | _ '%' _
  ;

additive_expression
  : _ '+' _ 
  | _ '-' _
  ;

shift_expression
  : _ '<<' _
  | _ '>>' _
  ;

relational_expression
  : _ '<' _
  | _ '>' _
  | _ '<=' _
  | _ '>=' _
  ;

equality_expression
  : _ '==' _
  | _ '=!' _
  ;

and_expression
  : _ '&' _
  ;

exclusive_or_expression
  : _ '^' _
  ;

inclusive_or_expression
  : _ '|' _
  ;

logical_and_expression
  : _ '&&' _
  ;

logical_or_expression
  : _ '||' _
  ;

conditional_expression(right)
  : _ '?' expression ':' _
  ;

assignment_expression(right)
  : unary_expression '=' _ 
  | unary_expression '*=' _ 
  | unary_expression '/=' _ 
  | unary_expression '%=' _
  | unary_expression '+=' _ 
  | unary_expression '-=' _
  | unary_expression '<<=' _ 
  | unary_expression '>>=' _ 
  | unary_expression '&=' _
  | unary_expression '^=' _ 
  | unary_expression '|=' _
  ;

comma_expression
  : _ ',' _
  ;